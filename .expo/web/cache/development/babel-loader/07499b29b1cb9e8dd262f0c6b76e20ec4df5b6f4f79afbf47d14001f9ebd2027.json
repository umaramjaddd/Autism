{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getDoc, doc } from 'firebase/firestore';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { Audio } from 'expo-av';\nimport { Ionicons } from '@expo/vector-icons';\nimport { db } from \"./firebase\";\nimport { useRoute } from '@react-navigation/native';\nimport { getDocs, query, collection, where } from 'firebase/firestore';\nimport { Query } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AudioScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    audioLoaded = _useState2[0],\n    setAudioLoaded = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    audioPlaying = _useState4[0],\n    setAudioPlaying = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    downloadURLs = _useState6[0],\n    setDownloadURLs = _useState6[1];\n  var route = useRoute();\n  var _route$params = route.params,\n    uid = _route$params.uid,\n    objId2 = _route$params.objId2;\n  useEffect(function () {\n    console.log(\"This IS New Screen & Your User ID is: \", uid);\n    console.log(\"This IS New Screen & Your Obj ID is: \", objId2);\n  }, [objId2]);\n  useEffect(function () {\n    var fetchRecordings = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var docRef = doc(db, 'recordings', uid, 'data', objId2);\n        var docSnapshot = yield getDoc(docRef);\n        if (docSnapshot.exists()) {\n          var recordings = docSnapshot.data().recordings;\n          var urls = [];\n          for (var timestamp in recordings) {\n            var recording = recordings[timestamp];\n            var downloadURL = recording.downloadURL;\n            urls.push(downloadURL);\n          }\n          setDownloadURLs(urls);\n          console.log('Downloaded audio URLs:');\n        } else {\n          alert(\"No Recordings Added Yet !!!\");\n          console.log('No audio recordings found for the provided UID');\n        }\n      });\n      return function fetchRecordings() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchRecordings();\n  }, [uid]);\n  var playSound = function () {\n    var _ref2 = _asyncToGenerator(function* (audioURL) {\n      try {\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n            uri: audioURL\n          }),\n          sound = _yield$Audio$Sound$cr.sound;\n        yield sound.playAsync();\n      } catch (error) {\n        console.log('Error playing sound: ', error);\n      }\n    });\n    return function playSound(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handlePlayAudio = function () {\n    var _ref3 = _asyncToGenerator(function* (audioURL) {\n      yield playSound(audioURL);\n    });\n    return function handlePlayAudio(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollViewContainer,\n    children: downloadURLs.map(function (url, index) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.touchableContainer,\n        onPress: function onPress() {\n          return handlePlayAudio(url);\n        },\n        children: [_jsx(View, {\n          style: styles.greyContainer\n        }), _jsx(Ionicons, {\n          name: \"musical-notes-outline\",\n          size: 24,\n          color: \"black\",\n          style: styles.icon\n        }), _jsxs(Text, {\n          style: styles.label,\n          children: [\"Play Audio \", index + 1]\n        })]\n      }, index);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollViewContainer: {\n    paddingVertical: 16\n  },\n  touchableContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 8,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: 'white',\n    elevation: 2\n  },\n  greyContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#F5F5F5',\n    opacity: 0.5\n  },\n  icon: {\n    marginRight: 8\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","TouchableOpacity","Text","StyleSheet","getDoc","doc","ref","getDownloadURL","Audio","Ionicons","db","useRoute","getDocs","query","collection","where","Query","jsx","_jsx","jsxs","_jsxs","AudioScreen","_useState","_useState2","_slicedToArray","audioLoaded","setAudioLoaded","_useState3","_useState4","audioPlaying","setAudioPlaying","_useState5","_useState6","downloadURLs","setDownloadURLs","route","_route$params","params","uid","objId2","console","log","fetchRecordings","_ref","_asyncToGenerator","docRef","docSnapshot","exists","recordings","data","urls","timestamp","recording","downloadURL","push","alert","apply","arguments","playSound","_ref2","audioURL","_yield$Audio$Sound$cr","Sound","createAsync","uri","sound","playAsync","error","_x","handlePlayAudio","_ref3","_x2","contentContainerStyle","styles","scrollViewContainer","children","map","url","index","style","touchableContainer","onPress","greyContainer","name","size","color","icon","label","create","paddingVertical","flexDirection","alignItems","marginVertical","paddingHorizontal","backgroundColor","elevation","position","top","left","right","bottom","opacity","marginRight","fontSize","fontWeight"],"sources":["E:/llllll/ListenAudio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { getDoc, doc } from 'firebase/firestore';\r\nimport { ref, getDownloadURL } from 'firebase/storage';\r\nimport { Audio } from 'expo-av';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { db } from './firebase';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { getDocs, query, collection, where } from 'firebase/firestore';\r\nimport { Query } from 'firebase/firestore';\r\nexport default function AudioScreen() {\r\n  const [audioLoaded, setAudioLoaded] = useState(false);\r\n  const [audioPlaying, setAudioPlaying] = useState(false);\r\n  const [downloadURLs, setDownloadURLs] = useState([]);\r\n\r\n  const route = useRoute();\r\n  const { uid, objId2 } = route.params;\r\n\r\n  useEffect(() => {\r\n    console.log(\"This IS New Screen & Your User ID is: \", uid);\r\n    console.log(\"This IS New Screen & Your Obj ID is: \", objId2);\r\n  }, [objId2]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecordings = async () => {\r\n      \r\n      // Retrieve the document from Firestore based on UID\r\n      //  const docRef = doc(db, 'recordings', uid, objId2);\r\n      const docRef = doc(db, 'recordings', uid, 'data', objId2);\r\n        \r\n      \r\n      const docSnapshot = await getDoc(docRef);\r\n\r\n      if (docSnapshot.exists()) {\r\n        // The document exists, retrieve the recordings object\r\n        const recordings = docSnapshot.data().recordings;\r\n\r\n        // Fetch the download URLs for each recording\r\n        const urls = [];\r\n        for (const timestamp in recordings) {\r\n          const recording = recordings[timestamp];\r\n          const downloadURL = recording.downloadURL;\r\n          urls.push(downloadURL);\r\n        }\r\n\r\n        setDownloadURLs(urls);\r\n        console.log('Downloaded audio URLs:');\r\n        // console.log('Downloaded audio URLs:', urls);\r\n      } else {\r\n        alert(\"No Recordings Added Yet !!!\");\r\n        console.log('No audio recordings found for the provided UID');\r\n      }\r\n    };\r\n\r\n    fetchRecordings();\r\n  }, [uid]);\r\n  \r\n  // useEffect(() => {\r\n  //   const fetchRecordings = async () => {\r\n  //     const querySnapshot = await getDocs(\r\n  //       query(\r\n  //         collection(db, 'recordings'),\r\n  //         where('uid', '==', uid),\r\n  //         where('obj_id', '==', objId2)\r\n  //       )\r\n  //     );\r\n  \r\n  //     if (!querySnapshot.empty) {\r\n  //       const urls = [];\r\n  \r\n  //       querySnapshot.forEach((docSnapshot) => {\r\n  //         const recording = docSnapshot.data();\r\n  //         const downloadURL = recording.url;\r\n  //         urls.push(downloadURL);\r\n  //       });\r\n  \r\n  //       setDownloadURLs(urls);\r\n  //       console.log('Downloaded audio URLs:', urls);\r\n  //     } else {\r\n  //       console.log('No audio recordings found for the provided UID and obj_id');\r\n  //     }\r\n  //   };\r\n  \r\n  //   fetchRecordings();\r\n  // }, [uid, objId2]);\r\n  \r\n  const playSound = async (audioURL) => {\r\n    try {\r\n      const { sound } = await Audio.Sound.createAsync({ uri: audioURL });\r\n      await sound.playAsync();\r\n    } catch (error) {\r\n      console.log('Error playing sound: ', error);\r\n    }\r\n  };\r\n\r\n  const handlePlayAudio = async (audioURL) => {\r\n    await playSound(audioURL);\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollViewContainer}>\r\n      {downloadURLs.map((url, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          style={styles.touchableContainer}\r\n          onPress={() => handlePlayAudio(url)}\r\n        >\r\n          <View style={styles.greyContainer} />\r\n          <Ionicons name=\"musical-notes-outline\" size={24} color=\"black\" style={styles.icon} />\r\n          <Text style={styles.label}>Play Audio {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollViewContainer: {\r\n    paddingVertical: 16,\r\n  },\r\n  touchableContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 12,\r\n    backgroundColor: 'white',\r\n    elevation: 2,\r\n  },\r\n  greyContainer: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#F5F5F5', // Adjust the color as needed\r\n    opacity: 0.5,\r\n  },\r\n  icon: {\r\n    marginRight: 8,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}