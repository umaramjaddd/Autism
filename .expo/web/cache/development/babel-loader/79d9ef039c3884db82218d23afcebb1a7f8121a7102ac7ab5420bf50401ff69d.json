{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { db, storage } from \"./firebase\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AdUploadScreen = function AdUploadScreen() {\n  var route = useRoute();\n  var uid = route.params.uid;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var handleImageUpload = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var imageRef = ref(storage, \"ad_images/\" + Date.now().toString());\n        yield uploadBytes(imageRef, image);\n        var imageURL = yield getDownloadURL(imageRef);\n        return imageURL;\n      } catch (error) {\n        console.log('Image upload error:', error);\n        throw new Error('Failed to upload image.');\n      }\n    });\n    return function handleImageUpload() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleAdUpload = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (!uid) {\n          console.log('User ID (uid) is undefined.');\n          return;\n        }\n      } catch (error) {\n        console.log('Ad upload error:', error);\n      }\n      try {\n        var imageURL = yield handleImageUpload();\n        var adData = {\n          userId: uid,\n          title: title,\n          description: description,\n          image: imageURL\n        };\n        yield addDoc(collection(db, 'ads'), adData);\n        setTitle('');\n        setDescription('');\n        setImage(null);\n        alert(\"Ad Uploaded Successfully!\");\n      } catch (error) {\n        console.log('Ad upload error:', error);\n      }\n    });\n    return function handleAdUpload() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleImageSelection = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (permissionResult.granted === false) {\n          alert('Permission to access camera roll is required!');\n          return;\n        }\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync();\n        if (!pickerResult.cancelled) {\n          setImage(pickerResult.uri);\n        }\n      } catch (error) {\n        console.log('Image selection error:', error);\n      }\n    });\n    return function handleImageSelection() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Upload an Ad\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Title\",\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      value: title\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Description\",\n      onChangeText: function onChangeText(text) {\n        return setDescription(text);\n      },\n      value: description\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleImageSelection,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Select Image\"\n      })\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: styles.selectedImage\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleAdUpload,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Upload Ad\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007AFF',\n    marginBottom: 30\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#D3D3D3',\n    borderRadius: 4,\n    padding: 10,\n    marginBottom: 20,\n    backgroundColor: '#FFFFFF',\n    width: '80%'\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    borderRadius: 4,\n    paddingVertical: 12,\n    paddingHorizontal: 45,\n    marginBottom: 10\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  selectedImage: {\n    width: 200,\n    height: 200,\n    marginBottom: 20\n  }\n});\nexport default AdUploadScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TextInput","TouchableOpacity","View","Image","ref","uploadBytes","getDownloadURL","addDoc","collection","db","storage","ImagePicker","useRoute","jsx","_jsx","jsxs","_jsxs","AdUploadScreen","route","uid","params","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","image","setImage","handleImageUpload","_ref","_asyncToGenerator","imageRef","Date","now","toString","imageURL","error","console","log","Error","apply","arguments","handleAdUpload","_ref2","adData","userId","alert","handleImageSelection","_ref3","permissionResult","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","cancelled","uri","style","styles","container","children","input","placeholder","onChangeText","text","value","button","onPress","buttonText","source","selectedImage","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","color","marginBottom","borderWidth","borderColor","borderRadius","padding","width","paddingVertical","paddingHorizontal","textAlign","height"],"sources":["E:/llllll/UploadAd.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View, Image } from 'react-native';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { db, storage } from './firebase';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\nconst AdUploadScreen = () => {\r\n  const route = useRoute();\r\n  const { uid } = route.params;\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleImageUpload = async () => {\r\n    try {\r\n      const imageRef = ref(storage, `ad_images/${Date.now().toString()}`);\r\n      await uploadBytes(imageRef, image);\r\n      const imageURL = await getDownloadURL(imageRef);\r\n      return imageURL;\r\n    } catch (error) {\r\n      console.log('Image upload error:', error);\r\n      throw new Error('Failed to upload image.');\r\n    }\r\n  };\r\n\r\n  const handleAdUpload = async () => {\r\n\r\n    try {\r\n      if (!uid) {\r\n        console.log('User ID (uid) is undefined.');\r\n        return;\r\n      }\r\n  \r\n      // Rest of the code\r\n    } catch (error) {\r\n      console.log('Ad upload error:', error);\r\n      // Handle error\r\n    }\r\n\r\n    try {\r\n      const imageURL = await handleImageUpload();\r\n\r\n      const adData = {\r\n        userId: uid, // Replace with the actual user ID\r\n        title,\r\n        description,\r\n        image: imageURL,\r\n        // Add other relevant ad data\r\n      };\r\n\r\n      await addDoc(collection(db, 'ads'), adData);\r\n\r\n      setTitle('');\r\n      setDescription('');\r\n      setImage(null);\r\n\r\n      alert(\"Ad Uploaded Successfully!\");\r\n\r\n      // Show success message or navigate to another screen\r\n      // ...\r\n    } catch (error) {\r\n      console.log('Ad upload error:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  const handleImageSelection = async () => {\r\n    try {\r\n      const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (permissionResult.granted === false) {\r\n        alert('Permission to access camera roll is required!');\r\n        return;\r\n      }\r\n\r\n      const pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n      if (!pickerResult.cancelled) {\r\n        setImage(pickerResult.uri);\r\n      }\r\n    } catch (error) {\r\n      console.log('Image selection error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Upload an Ad</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Title\"\r\n        onChangeText={(text) => setTitle(text)}\r\n        value={title}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Description\"\r\n        onChangeText={(text) => setDescription(text)}\r\n        value={description}\r\n      />\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleImageSelection}>\r\n        <Text style={styles.buttonText}>Select Image</Text>\r\n      </TouchableOpacity>\r\n\r\n      {image && <Image source={{ uri: image }} style={styles.selectedImage} />}\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleAdUpload}>\r\n        <Text style={styles.buttonText}>Upload Ad</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#007AFF',\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#D3D3D3',\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    backgroundColor: '#FFFFFF',\r\n    width: '80%',\r\n  },\r\n  button: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 4,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 45,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  selectedImage: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default AdUploadScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}