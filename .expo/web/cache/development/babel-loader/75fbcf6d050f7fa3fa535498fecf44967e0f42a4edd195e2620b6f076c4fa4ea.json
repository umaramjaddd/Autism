{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firestore from '@react-native-firebase/firestore';\nimport { doc, getDoc, setDoc, addDoc, updateDoc, collection } from 'firebase/firestore';\nimport { db } from \"./firebase\";\nimport GetDocs from \"./GetDoc\";\nimport okay from \"./signups\";\nimport { useRoute } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { auth } from \"./firebase\";\nimport { signOut } from 'firebase/auth';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport SignUpScreen from \"./new\";\nimport AccountScreen from \"./Profile\";\nimport HomeScreen from \"./Home\";\nimport LoginScreen from \"./Login\";\nimport SplashScreen from \"./Splash\";\nimport AdUploadScreen from \"./UploadAd\";\nimport AdsScreen from \"./Ads\";\nimport YourScreen from \"./Classes\";\nimport RecordingScreen from \"./Upload Audio\";\nimport ListenAudio from \"./ListenAudio\";\nimport { useNavigation } from '@react-navigation/native';\nimport Class1 from \"./Class1\";\nimport ClassB from \"./ClassB\";\nimport ClassD from \"./ClassD\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar handleSignOut = function handleSignOut() {\n  signOut(auth).then(function () {\n    console.log('Signed out successfully');\n    navigation.navigate('Login');\n  }).catch(function (error) {\n    console.log('Error signing out:', error);\n  });\n};\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    myData = _useState2[0],\n    setMyData = _useState2[1];\n  var AppDrawer = function AppDrawer() {\n    var route = useRoute();\n    var _route$params = route.params,\n      userData = _route$params.userData,\n      uid = _route$params.uid;\n    return _jsxs(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      initialParams: route.params,\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          drawerIcon: function drawerIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(MaterialIcons, {\n              name: \"home\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), function (props) {\n        return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n          userData: userData,\n          uid: uid\n        }));\n      }, _jsx(Drawer.Screen, {\n        name: \"myProfile\",\n        component: AccountScreen,\n        options: {\n          drawerIcon: function drawerIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(MaterialIcons, {\n              name: \"person\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"Classes\",\n        component: YourScreen,\n        options: {\n          drawerIcon: function drawerIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(MaterialIcons, {\n              name: \"class\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"Sign Out\",\n        component: handleSignOut,\n        options: {\n          drawerIcon: function drawerIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsx(MaterialIcons, {\n              name: \"logout\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), function (props) {\n        return _jsx(YourScreen, _objectSpread(_objectSpread({}, props), {}, {\n          userData: userData,\n          uid: uid\n        }));\n      }]\n    });\n  };\n  var AuthStack = function AuthStack() {\n    return _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Splash\",\n        component: SplashScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: SignUpScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Class1\",\n        component: Class1\n      }), _jsx(Stack.Screen, {\n        name: \"ClassA\",\n        component: YourScreen\n      }), _jsx(Stack.Screen, {\n        name: \"ClassB\",\n        component: ClassB\n      }), _jsx(Stack.Screen, {\n        name: \"ClassD\",\n        component: ClassD\n      }), _jsx(Stack.Screen, {\n        name: \"mySeeAudio\",\n        component: ListenAudio\n      }), _jsx(Stack.Screen, {\n        name: \"AppDrawer\",\n        component: AppDrawer\n      })]\n    });\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthStack\n      }), _jsx(Stack.Screen, {\n        name: \"AppDrawer\",\n        component: AppDrawer\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Button","firestore","doc","getDoc","setDoc","addDoc","updateDoc","collection","db","GetDocs","okay","useRoute","NavigationContainer","createStackNavigator","createDrawerNavigator","auth","signOut","MaterialIcons","SignUpScreen","AccountScreen","HomeScreen","LoginScreen","SplashScreen","AdUploadScreen","AdsScreen","YourScreen","RecordingScreen","ListenAudio","useNavigation","Class1","ClassB","ClassD","jsx","_jsx","jsxs","_jsxs","Stack","Drawer","handleSignOut","then","console","log","navigation","navigate","catch","error","App","_useState","_useState2","_slicedToArray","myData","setMyData","AppDrawer","route","_route$params","params","userData","uid","Navigator","initialRouteName","initialParams","children","Screen","name","component","options","drawerIcon","_ref","color","size","props","_objectSpread","_ref2","_ref3","_ref4","AuthStack","screenOptions","headerShown","styles","create","container","flex","justifyContent","alignItems","text","fontSize","fontWeight","marginBottom"],"sources":["E:/llllll/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, Button } from 'react-native';\nimport firestore from '@react-native-firebase/firestore';\nimport { doc, getDoc, setDoc, addDoc, updateDoc, collection } from 'firebase/firestore';\nimport { db } from './firebase';\nimport GetDocs from './GetDoc';\nimport okay from './signups';\nimport { useRoute } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { auth } from './firebase';\nimport { signOut } from 'firebase/auth';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport SignUpScreen from './new';\nimport AccountScreen from './Profile';\nimport HomeScreen from './Home';\nimport LoginScreen from './Login';\nimport SplashScreen from './Splash';\nimport AdUploadScreen from './UploadAd';\nimport AdsScreen from './Ads';\nimport YourScreen from './Classes';\nimport RecordingScreen from './Upload Audio';\nimport ListenAudio from './ListenAudio';\nimport { useNavigation } from '@react-navigation/native';\nimport Class1 from './Class1';\nimport ClassB from './ClassB';\nimport ClassD from './ClassD';\n// import SignOut from './SignOut';\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\n// const navigation = useNavigation ();\n// const navigation = useNavigation();\n\n  const handleSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        console.log('Signed out successfully');\n        // Navigate to the desired screen upon successful sign out\n        navigation.navigate('Login');\n      })\n      .catch((error) => {\n        console.log('Error signing out:', error);\n        // Handle the error if signing out fails\n      });\n  };\n\nexport default function App() {\n  const [myData, setMyData] = useState(null);\n\n  const AppDrawer = () => {\n    const route = useRoute();\n    const { userData, uid } = route.params;\n    return (\n      <Drawer.Navigator    \n      initialRouteName=\"Home\" initialParams={route.params}>\n                <Drawer.Screen name=\"Home\" component={HomeScreen} \n                  options={{\n    drawerIcon: ({ color, size }) => (\n      <MaterialIcons name=\"home\" color={color} size={size} />\n    ),\n  }}\n                />\n        {(props) => <HomeScreen {...props} userData={userData} uid={uid} />}\n        \n        <Drawer.Screen name=\"myProfile\" component={AccountScreen} \n          options={{\n    drawerIcon: ({ color, size }) => (\n      <MaterialIcons name=\"person\" color={color} size={size} />\n    ),\n  }}\n        />\n        \n        <Drawer.Screen name=\"Classes\" component={YourScreen} \n           options={{\n    drawerIcon: ({ color, size }) => (\n      <MaterialIcons name=\"class\" color={color} size={size} />\n    ),\n  }}\n        />\n        <Drawer.Screen name=\"Sign Out\" component={handleSignOut} \n          options={{\n    drawerIcon: ({ color, size }) => (\n      <MaterialIcons name=\"logout\" color={color} size={size} />\n    ),\n  }}\n        />\n        {(props) => <YourScreen {...props} userData={userData} uid={uid} />} \n      </Drawer.Navigator>\n    );\n  };\n\n  const AuthStack = () => {\n    return (\n      <Stack.Navigator  screenOptions={{\n             headerShown: false\n         }}>\n        <Stack.Screen name=\"Splash\" component={SplashScreen} />\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Signup\" component={SignUpScreen} /> \n        <Stack.Screen name=\"Home\" component={HomeScreen}  />\n        <Stack.Screen name=\"Class1\" component={Class1}  /> \n        <Stack.Screen name=\"ClassA\" component={YourScreen}  />\n        <Stack.Screen name=\"ClassB\" component={ClassB}  />\n        <Stack.Screen name=\"ClassD\" component={ClassD}  />\n        <Stack.Screen name=\"mySeeAudio\" component={ListenAudio}  />\n        <Stack.Screen name=\"AppDrawer\" component={AppDrawer} />\n      </Stack.Navigator>\n    );\n  };\n\n  return (\n\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false\n        }}>\n        <Stack.Screen name=\"Auth\" component={AuthStack} />\n        <Stack.Screen name=\"AppDrawer\" component={AppDrawer} />\n      </Stack.Navigator>\n    </NavigationContainer>\n\n\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}